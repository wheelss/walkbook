<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiekai.demo.good.dao.GoodDao">
    <!--统计商品数量-->
    <select id="countGoodAcct" parameterType="com.xiekai.demo.good.entity.GoodInfo" resultType="int">
        select count(isbn)
        from t_info_goods
        where is_delete = 0
        and goods_id= #{goodsId}
    </select>

    <!--新增商品-->
    <insert id="addGoods" parameterType="com.xiekai.demo.good.entity.GoodInfo">
        insert into t_info_goods
        (goods_id,
        isbn,
        goods_name,
        one_classify_name,
        two_classify_name,
        goods_describe,
        supplier_name,
        goods_inventory,
        goods_original_cost,
        goods_price,
        goods_advertise,
        goods_image_path,
        goods_shelf_time,
        goods_state_id,
        goods_views_num,
        goods_author,
        goods_press,
        goods_sales,
        is_delete,
        create_time,
        create_user,
        version
        )
        values
        (#{goodsId},
        #{isbn},
        #{goodsName},
        #{oneClassifyName},
        #{twoClassifyName},
        #{goodsDescribe},
        #{supplierName},
        #{goodsInventory},
        #{goodsOriginalCost},
        #{goodsPrice},
        #{goodsAdvertise},
        #{goodsImagePath},
        0,
        3,
        0,
        #{goodsAuthor},
        #{goodsPress},
        0,
        0,
        now(),
        #{createUser},
        0)
    </insert>

    <!--删除商品-->
    <update id="deleteGoods" parameterType="com.xiekai.demo.good.entity.GoodInfo">
        update t_info_goods
        set
            is_delete = 1,
            update_time = now(),
            update_user = #{updateUser}
        where goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--修改商品信息-->
    <update id="updateGoods" parameterType="com.xiekai.demo.good.entity.GoodInfo">
        update t_info_goods
        set
            goods_name = #{goodsName},
            isbn = #{isbn},
            one_classify_name = #{oneClassifyName},
            two_classify_name = #{twoClassifyName},
            goods_describe = #{goodsDescribe},
            supplier_name = #{supplierName},
            goods_inventory = #{goodsInventory},
            goods_original_cost = #{goodsOriginalCost},
            goods_price = #{goodsPrice},
            goods_advertise = #{goodsAdvertise},
            goods_image_path = #{goodsImagePath},
            goods_author = #{goodsAuthor},
            goods_press = #{goodsPress},
            update_time = now(),
            update_user = #{updateUser},
            version = version + 1
        where goods_id = #{goodsId}
        and version = #{version}
    </update>

    <!--获取商品信息-->
    <select id="getGoods" parameterType="java.lang.String" resultType="com.xiekai.demo.good.entity.GoodInfo">
        select
            goods_name goodsName,
            isbn isbn,
            one_classify_name oneClassifyName,
            two_classify_name twoClassifyName,
            goods_describe goodsDescibe,
            supplier_name supplierName,
            goods_inventory goodsInventory,
            goods_original_cost goodsOriginalCost,
            goods_price goodsPrice,
            goods_advertise goodsAdvertise,
            goods_image_path goodsImagePath,
            goods_author goodsAuthor,
            goods_press goodsPress
        from t_info_goods
        where goods_id = #{goodsId}
        and is_delete = 0
    </select>


    <!--商品列表-->
    <select id="listGoodsPage" parameterType="com.xiekai.demo.good.entity.GoodInfo"
            resultType="com.xiekai.demo.good.entity.GoodInfo">
        select
            goods_name goodsName,
            goods_original_cost goodsOriginalCost,
            goods_price goodsPrice,
            goods_sales goodsSales,
            one_classify_name oneClassifyName,
            two_classify_name twoClassifyName,
            goods_advertise goodsAdvertise,
            goods_describe goodsDescibe,
            goods_state_id goodsStateId,
            goods_shelf_time goodsShelfTime,
            goods_views_num goodsViewsNum,
            supplier_name supplierName,
            goods_image_path goodsImagePath,
            goods_inventory goodsInventory,
            isbn,
            goods_id goodsId,
            version
        from t_info_goods
        where is_delete = 0
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsAdvertise != null and goodsAdvertise != ''">
            and goods_advertise like concat('%', #{goodsAdvertise}, '%')
        </if>
        <if test="goodsAuthor != null and goodsAuthor != ''">
            and goods_author like concat('%', #{goodsAuthor}, '%')
        </if>
        <if test="goodsPress != null and goodsPress != ''">
            and goods_press like concat('%', #{goodsPress}, '%')
        </if>
        <if test="goodsStateId != null and goodsStateId != ''">
            and goods_state_id like concat('%', #{goodsStateId}, '%')
        </if>
        order by update_time desc
    </select>

    <!--修改商品状态-->
    <update id="updateGoodsShelfState" parameterType="java.util.List">
        <foreach collection="listUpdate" item="item" index="index" open="" separator=";" close="">
            update t_info_goods
            <set>
                goods_state_id = #{item.goodsStateId},
                update_time = now(),
                update_user = #{item.updateUser,jdbcType=VARCHAR},
                version = version + 1
            </set>
            <where>
                goods_id = #{item.goodsId,jdbcType=VARCHAR}
                AND version = #{item.version}
            </where>
        </foreach>
    </update>


</mapper>